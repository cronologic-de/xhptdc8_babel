name: Build All Projects
#
# Every build job:
# - Is responsible for building one project, and committing the output 
#   to the repository.
# - Needs a relevant `Check-xyz` job to check if pushed files are concerned 
#   files or NOT, if NOT then every step in the job will be bypassed.
# - Needs the previous (orderd as written in the file here) build job to 
#   guarantee a sequential run.
#   Reason: since every job commits to the repository, if these jobs run concurrently
#   then commit fails, even if there is no "technical" dependnecy between them.
#   One drawback that if a build job fails, next jobs won't run. 
#   Another one is the longer time taken.
# - Should pull output of the previous job(s), to avoid error: 
#   `tip of your current branch is behind its remote counterpart`
#
# You can convert Configuration type to build (e.g. BUILT_TYPE) to a build matrix 
# if you need coverage of multiple configuration types.
# https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix

on: # workflow_dispatch
  push:
    paths: # Collected from paths of all jobs below
    - 'include/**'
    - 'dummy/**'
    - 'lib/**'
    - 'go/info/src-cgo/**'
    - 'rust/readout/**'
    - 'util/util/**'
    - 'util/util_test/**'
    - '.github/workflows/**'

env:
  BUILD_TYPE: Release
  COMMIT_MSG: 'Internal build due to code change' 
  CRONO_LIB_PATH: ./lib/
  CRONO_BIN_PATH: ./bin/
  CRONO_BIN_PATH_WIN: .\bin\
  DUMMY_LIB_PTH: .\lib\dummy\
  DUMMY_LIB_PTH_COMMIT: ./lib/dummy/  # With `/` instead
  BUILD_PATH: '../build/bfR'  # Relative to 'tools' folder in the project

jobs:
  # ===========================================================================
  #
  # If triggered by a new tag then no need/do not commit the output files, just 
  # make sure they build. As outputs saved on main are supposed to be latest
  # once built from the latest update.
  #
  Check-Trigger:
    runs-on: windows-latest
    outputs:
      is_tag: ${{ steps.set-tag-output.outputs.is_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if triggered by a tag
        id: set-tag-output
        run: |
          if ($env:GITHUB_REF -like 'refs/tags/*') {
            echo "Triggered by a tag"
            echo "::set-output name=is_tag::true"
          } else {
            echo "Not triggered by a tag"
            echo "::set-output name=is_tag::false"
          }

  # ===========================================================================
  #
  # Upon any change in sub files of ./dummy, the action does the following:
  # 1. Builds the Dummy Library Release x64 DLL & Lib, using MSBuild
  # 2. Copies the DLLs & Libs to the corresponding folders on ./lib 
  #    repository folder, and commits
  #
  Check-Build-Dummy-Library-Using-MSBuild:
    runs-on: ubuntu-latest

    # Map a step output to a job output
    outputs:
      ok_to_proceed: ${{ steps.check.outputs.ok_to_proceed_val }}
      
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Get changed files in concerned folder(s)
      id: changed-files-specific
      uses: tj-actions/changed-files@v35
      with:
        files: |
          include/**
          dummy/**
          .github/workflows/**
          
    # Check if any file(s) in the concerned folder changed
    - name: Check
      id: check
      if: steps.changed-files-specific.outputs.any_changed == 'false'
      run: |
        echo "No concerned files changed, suppressing processing."       
        echo "ok_to_proceed_val=N" >> $GITHUB_OUTPUT
        
    - name: Pull latest
      run: |
        git pull

  # ___________________________________________________________________________
  #
  Build-Dummy-Library-Using-MSBuild:
    runs-on: windows-latest

    needs:
    - Check-Build-Dummy-Library-Using-MSBuild
    - Check-Trigger
    
    defaults:
       run:
         shell: powershell

    env: 
          SOLUTION_FILE_PATH: .\dummy\msvscpp\
          X64_OUTPUT_DIR: .\dummy\msvscpp\x64\Release\
          X64_DUMMY_DLL_NAME: xhptdc8_driver_64.dll
          X64_DUMMY_LIB_NAME: xhptdc8_driver_64.lib
          # Internal
          COMMIT_MSG: 'Internal build due to Dummy-Library code change' 
        
    steps:
    - name: echo Suppress Status if Needed
      if: ${{needs.Check-Build-Dummy-Library-Using-MSBuild.outputs.ok_to_proceed == 'N' }}
      run: |
        echo "Job execution processing is suppressed for no cencerned files are changed."

    - name: Checkout Code
      if: ${{needs.Check-Build-Dummy-Library-Using-MSBuild.outputs.ok_to_proceed != 'N' }}
      uses: actions/checkout@v4
             
    - name: Pull latest
      if: ${{needs.Check-Trigger.outputs.is_tag != 'true' && needs.Check-Build-Dummy-Library-Using-MSBuild.outputs.ok_to_proceed != 'N' }}
      run: git pull

    - name: Add MSBuild to PATH
      if: ${{needs.Check-Build-Dummy-Library-Using-MSBuild.outputs.ok_to_proceed != 'N' }}
      uses: microsoft/setup-msbuild@v1.1

    - name: Build Release x64
      if: ${{needs.Check-Build-Dummy-Library-Using-MSBuild.outputs.ok_to_proceed != 'N' }}
      env:
        BUILD_PLATFORM: x64
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        msbuild ${{env.SOLUTION_FILE_PATH}} /m /property:Configuration=Release /property:Platform=${{env.BUILD_PLATFORM}}
        Copy-Item ${{env.X64_OUTPUT_DIR}}${{env.X64_DUMMY_DLL_NAME}} -Destination ${{env.DUMMY_LIB_PTH}}
        Copy-Item ${{env.X64_OUTPUT_DIR}}${{env.X64_DUMMY_LIB_NAME}} -Destination ${{env.DUMMY_LIB_PTH}}
  
    - name: Commit x64 DLL
      if: ${{needs.Check-Trigger.outputs.is_tag != 'true' && needs.Check-Build-Dummy-Library-Using-MSBuild.outputs.ok_to_proceed != 'N' }}
      uses: EndBug/add-and-commit@v9
      with:
          author_name: Internal Workflow Action
          message: ${{env.COMMIT_MSG}}
          add: ${{env.DUMMY_LIB_PTH_COMMIT}}${{env.X64_DUMMY_DLL_NAME}} --force
          
    - name: Commit x64 Lib
      if: ${{needs.Check-Trigger.outputs.is_tag != 'true' && needs.Check-Build-Dummy-Library-Using-MSBuild.outputs.ok_to_proceed != 'N' }}
      uses: EndBug/add-and-commit@v9
      with:
          author_name: Internal Workflow Action
          message: ${{env.COMMIT_MSG}}
          add: ${{env.DUMMY_LIB_PTH_COMMIT}}${{env.X64_DUMMY_LIB_NAME}} --force

  # ===========================================================================
  #
  Check-Info-Tool-Build:
    runs-on: ubuntu-latest
    # Map a step output to a job output

    outputs:
      ok_to_proceed: ${{ steps.check.outputs.ok_to_proceed_val }}
      
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Get changed files in concerned folder(s)
      id: changed-files-specific
      uses: tj-actions/changed-files@v35
      with:
        files: |
          include/**
          lib/**
          go/info/src-cgo/** 
          .github/workflows/**
        
    # Check if any file(s) in the concerned folder changed
    - name: Check
      id: check
      if: steps.changed-files-specific.outputs.any_changed == 'false'
      run: |
        echo "No concerned files changed, suppressing processing."
        echo "ok_to_proceed_val=N" >> $GITHUB_OUTPUT
  
  # ___________________________________________________________________________
  #
  Info-Tool-Build:
    runs-on: windows-latest

    needs: 
    - Check-Info-Tool-Build    
    - Build-Dummy-Library-Using-MSBuild # Guarantee Sequential Build
    - Check-Trigger

    defaults:
       run:
         shell: cmd
         
    env: 
      SOLUTION_FILE_PATH: .\go\info\src-cgo\
      X64_EXE_NAME: xhptdc8_info.exe
          
    steps:
    - name: echo Suppress Status if Needed
      if: ${{needs.Check-Info-Tool-Build.outputs.ok_to_proceed == 'N' }}
      run: |
        echo "Job execution processing is suppressed for no cencerned files are changed."
        
    - name: Checkout Code
      if: ${{needs.Check-Info-Tool-Build.outputs.ok_to_proceed != 'N' }}
      uses: actions/checkout@v4

    - name: Pull changes
      if: ${{needs.Check-Trigger.outputs.is_tag != 'true' && needs.Check-Info-Tool-Build.outputs.ok_to_proceed != 'N' }}
      run: git pull
        
    - name: Display Versions 
      if: ${{needs.Check-Info-Tool-Build.outputs.ok_to_proceed != 'N' }}
      run: |
        go env GOOS GOARCH CGO_ENABLED CC
        gcc --version

    # In the build, cd into the folder to avoid 'Not in GOROOT' error, then cd back again
    - name: Build 64 EXE
      if: ${{needs.Check-Info-Tool-Build.outputs.ok_to_proceed != 'N' }}
      run: |
        cd go\info\src-cgo 
        go build -o ${{env.X64_EXE_NAME}} .\xhptdc8_info.go .\info_aux.go
        cd ..\..\..\       
    
    - name: Copy x64 EXE to Repository
      if: ${{needs.Check-Trigger.outputs.is_tag != 'true' && needs.Check-Info-Tool-Build.outputs.ok_to_proceed != 'N' }}
      run: |
        copy ${{env.SOLUTION_FILE_PATH}}${{env.X64_EXE_NAME}} ${{env.CRONO_BIN_PATH_WIN}}${{env.X64_EXE_NAME}}
        
    - name: Commit x64 EXE
      if: ${{needs.Check-Trigger.outputs.is_tag != 'true' && needs.Check-Info-Tool-Build.outputs.ok_to_proceed != 'N' }}
      uses: EndBug/add-and-commit@v9
      with:
        author_name: Internal Workflow Action
        message: ${{env.COMMIT_MSG}}
        add: ${{env.CRONO_BIN_PATH}}${{env.X64_EXE_NAME}} --force

  # ===========================================================================
  #
  Check-Util-Library:
    runs-on: ubuntu-latest

    # Map a step output to a job output
    outputs:
      ok_to_proceed: ${{ steps.check.outputs.ok_to_proceed_val }}
      
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Get changed files in concerned folder(s)
      id: changed-files-specific
      uses: tj-actions/changed-files@v35
      with:
        files: |
          include/**
          lib/**
          util/util/**
          .github/workflows/**
        
    # Check if any file(s) in the concerned folder changed
    - name: Check
      id: check
      if: steps.changed-files-specific.outputs.any_changed == 'false'
      run: |
        echo "No concerned files changed, suppressing processing."
        echo "ok_to_proceed_val=N" >> $GITHUB_OUTPUT

  # ___________________________________________________________________________
  #
  Util-Library-Win:
    runs-on: windows-latest

    needs: 
    - Check-Util-Library
    - Info-Tool-Build # Guarantee Sequential Build
    - Check-Trigger

    defaults:
       run:
         shell: powershell

    env: 
      X64_DLL_NAME: xhptdc8_util.dll
      X64_LIB_NAME: xhptdc8_util.lib
      UTIL_TOOLS_SUB_DIR: './util/util/tools'

    steps:
    - name: echo Suppress Status if Needed
      if: ${{needs.Check-Util-Library.outputs.ok_to_proceed == 'N' }}
      run: |
        echo "Job execution processing is suppressed for no cencerned files are changed."
        
    - name: Checkout Code
      if: ${{needs.Check-Util-Library.outputs.ok_to_proceed != 'N' }}
      uses: actions/checkout@v4
  
    - name: Pull Latest 
      if: ${{needs.Check-Trigger.outputs.is_tag != 'true' && needs.Check-Util-Library.outputs.ok_to_proceed != 'N' }}
      run: git pull

    # Build release, output by CMake to `X64_REPO_LIB_PTH`
    - name: Configure CMake and Build Release x64
      if: ${{needs.Check-Util-Library.outputs.ok_to_proceed != 'N' }}
      run: |
        cd ${{env.UTIL_TOOLS_SUB_DIR}}
        cmake -B ${{env.BUILD_PATH}}
        cmake --build ${{env.BUILD_PATH}} --config ${{env.BUILD_TYPE}}

    - name: Copy output to Dummy Library Folder
      if: ${{needs.Check-Trigger.outputs.is_tag != 'true' && needs.Check-Util-Library.outputs.ok_to_proceed != 'N' }}
      run: |
        Copy-Item ${{env.CRONO_BIN_PATH}}${{env.X64_DLL_NAME}} -Destination ${{env.DUMMY_LIB_PTH}}
        Copy-Item ${{env.CRONO_LIB_PATH}}${{env.X64_LIB_NAME}} -Destination ${{env.DUMMY_LIB_PTH}}
 
    - name: Commit DLL and Lib
      if: ${{needs.Check-Trigger.outputs.is_tag != 'true' && needs.Check-Util-Library.outputs.ok_to_proceed != 'N' }}
      uses: EndBug/add-and-commit@v9
      with:
          author_name: Internal Workflow Action
          message: ${{env.COMMIT_MSG}}
          add: |
            ${{env.CRONO_BIN_PATH}}${{env.X64_DLL_NAME}}
            ${{env.CRONO_LIB_PATH}}${{env.X64_LIB_NAME}}
            ${{env.DUMMY_LIB_PTH}}${{env.X64_DLL_NAME}}
            ${{env.DUMMY_LIB_PTH}}${{env.X64_LIB_NAME}}
          force: true

  # ___________________________________________________________________________
  #
  Util-Library-Linux:
    runs-on: ubuntu-latest

    needs: 
    - Check-Util-Library
    - Util-Library-Win # Guarantee Sequential Build
    - Check-Trigger

    env: 
      X64_LIB_NAME: libxhptdc8_util.so
      UTIL_TOOLS_SUB_DIR: './util/util/tools'

    steps:
    - name: echo Suppress Status if Needed
      if: ${{needs.Check-Util-Library.outputs.ok_to_proceed == 'N' }}
      run: |
        echo "Job execution processing is suppressed for no cencerned files are changed."
        
    - name: Checkout Code
      if: ${{needs.Check-Util-Library.outputs.ok_to_proceed != 'N' }}
      uses: actions/checkout@v4
  
    - name: Pull Latest 
      if: ${{needs.Check-Util-Library.outputs.ok_to_proceed != 'N' }}
      run: git pull

    # Build release, output by CMake to `X64_REPO_LIB_PTH`
    - name: Configure CMake and Build Release x64
      if: ${{needs.Check-Util-Library.outputs.ok_to_proceed != 'N' }}
      run: |
        cd ${{env.UTIL_TOOLS_SUB_DIR}}
        cmake -B ${{env.BUILD_PATH}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        cmake --build ${{env.BUILD_PATH}}
 
    - name: Commit Lib
      if: ${{needs.Check-Trigger.outputs.is_tag != 'true' && needs.Check-Util-Library.outputs.ok_to_proceed != 'N' }}
      uses: EndBug/add-and-commit@v9
      with:
          author_name: Internal Workflow Action
          message: ${{env.COMMIT_MSG}}
          add: ${{env.CRONO_BIN_PATH}}${{env.X64_LIB_NAME}} --force
          
  # ===========================================================================
  #
  Check-Util-Test:
    runs-on: ubuntu-latest

    # Map a step output to a job output
    outputs:
      ok_to_proceed: ${{ steps.check.outputs.ok_to_proceed_val }}
      
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Get changed files in concerned folder(s)
      id: changed-files-specific
      uses: tj-actions/changed-files@v35
      with:
        files: |
          include/**
          lib/**
          util/util_test/**
          .github/workflows/**
        
    # Check if any file(s) in the concerned folder changed
    - name: Check
      id: check
      if: steps.changed-files-specific.outputs.any_changed == 'false'
      run: |
        echo "No concerned files changed, suppressing processing."
        echo "ok_to_proceed_val=N" >> $GITHUB_OUTPUT

  # ___________________________________________________________________________
  # 
  Util-Test-Win:
    runs-on: windows-latest

    needs: 
    - Check-Util-Test
    - Util-Library-Linux # Output needed, Guarantee Sequential Build
    - Check-Trigger

    defaults:
       run:
         shell: powershell

    env: 
      X64_EXE_NAME: xhptdc8_util_test.exe
      COMMIT_MSG: 'Internal build due to Util Test code change' 
      UTIL_TEST_TOOLS_SUB_DIR: './util/util_test/tools'

    steps:
    - name: echo Suppress Status if Needed
      if: ${{needs.Check-Util-Test.outputs.ok_to_proceed == 'N' }}
      run: |
        echo "Job execution processing is suppressed for no cencerned files are changed."
        
    - name: Checkout Code
      if: ${{needs.Check-Util-Test.outputs.ok_to_proceed != 'N' }}
      uses: actions/checkout@v4
  
    - name: Pull Latest 
      if: ${{needs.Check-Util-Test.outputs.ok_to_proceed != 'N' }}
      run: |
        git pull
        
    # Build release, output by CMake to `X64_REPO_LIB_PTH`, copy to `DUMMY_LIB_PTH`
    - name: Configure CMake and Build Release x64
      if: ${{needs.Check-Util-Test.outputs.ok_to_proceed != 'N' }}
      env:
        BUILD_PLATFORM: x64
      run: |
        cd ${{env.UTIL_TEST_TOOLS_SUB_DIR}}
        cmake -B ${{env.BUILD_PATH}}
        cmake --build ${{env.BUILD_PATH}} --config ${{env.BUILD_TYPE}}

    # Copy to `DUMMY_LIB_PTH`
    - name: Copy output to Dummy Library Path
      if: ${{needs.Check-Trigger.outputs.is_tag != 'true' && needs.Check-Util-Test.outputs.ok_to_proceed != 'N' }}
      run: |
        Copy-Item ${{env.CRONO_BIN_PATH}}${{env.X64_EXE_NAME}} -Destination ${{env.DUMMY_LIB_PTH}}
  
    - name: Commit x64 EXE
      if: ${{needs.Check-Trigger.outputs.is_tag != 'true' && needs.Check-Util-Test.outputs.ok_to_proceed != 'N' }}
      uses: EndBug/add-and-commit@v9
      with:
          author_name: Internal Workflow Action
          message: ${{env.COMMIT_MSG}}
          add: |
            ${{env.CRONO_BIN_PATH}}${{env.X64_EXE_NAME}}
            ${{env.DUMMY_LIB_PTH_COMMIT}}${{env.X64_EXE_NAME}}

  # ___________________________________________________________________________
  Util-Test-Linux:
    runs-on: ubuntu-latest

    needs:
    - Check-Util-Test
    - Util-Test-Win # Guarantee Sequential Build
    - Check-Trigger

    env: 
      X64_EXE_NAME: xhptdc8_util_test
      COMMIT_MSG: 'Internal build due to Util Test code change' 
      UTIL_TEST_TOOLS_SUB_DIR: './util/util_test/tools'

    steps:
    - name: echo Suppress Status if Needed
      if: ${{needs.Check-Util-Test.outputs.ok_to_proceed == 'N' }}
      run: |
        echo "Job execution processing is suppressed for no cencerned files are changed."
        
    - name: Checkout Code
      if: ${{needs.Check-Util-Test.outputs.ok_to_proceed != 'N' }}
      uses: actions/checkout@v4

    - name: Pull Latest 
      if: ${{needs.Check-Trigger.outputs.is_tag != 'true' && needs.Check-Util-Test.outputs.ok_to_proceed != 'N' }}
      run: |
        git pull
        
    # Build release, output by CMake to `X64_REPO_LIB_PTH`
    - name: Configure CMake and Build Release x64
      if: ${{needs.Check-Util-Test.outputs.ok_to_proceed != 'N' }}
      run: |
        git pull
        cd ${{env.UTIL_TEST_TOOLS_SUB_DIR}}
        cmake -B ${{env.BUILD_PATH}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        cmake --build ${{env.BUILD_PATH}}
  
    - name: Commit x64 EXE
      if: ${{needs.Check-Trigger.outputs.is_tag != 'true' && needs.Check-Util-Test.outputs.ok_to_proceed != 'N' }}
      uses: EndBug/add-and-commit@v9
      with:
          author_name: Internal Workflow Action
          message: ${{env.COMMIT_MSG}}
          add: ${{env.CRONO_BIN_PATH}}${{env.X64_EXE_NAME}} --force        


  # ===========================================================================
  #
  Check-Build-UG_EX:
    runs-on: ubuntu-latest

    # Map a step output to a job output
    outputs:
      ok_to_proceed: ${{ steps.check.outputs.ok_to_proceed_val }}
      
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Get changed files in concerned folder(s)
      id: changed-files-specific
      uses: tj-actions/changed-files@v42
      with:
        files: |
          lib/**
          include/**
          ug_example/**
          .github/workflows/**
          
    # Check if any file(s) in the concerned folder changed
    - name: Check
      id: check
      if: steps.changed-files-specific.outputs.any_changed == 'false'
      run: |
        echo "No concerned files changed, suppressing processing."       
        echo "ok_to_proceed_val=N" >> $GITHUB_OUTPUT

  # ___________________________________________________________________________
  # 
  UG_EX-Linux-Build:
    runs-on: ubuntu-latest

    needs: 
    - Check-Build-UG_EX
    - Util-Test-Linux # Guarnatee Sequential Build 
    - Check-Trigger

    env: 
      TOOLS_PATH: ug_example/tools
      CRONO_EXE_NAME: xhptdc8_ugex

    steps:
    - name: echo Suppress Status if Needed
      if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed == 'N' }}
      run: |
        echo "Job execution processing is suppressed for no cencerned files are changed."
        
    - name: Checkout Code
      if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
      uses: actions/checkout@v4

    - name: Pull latest changes
      if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
      run: |
        git pull --rebase

    - name: Configure CMake and Build
      if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
      run: |
        cd ${{env.TOOLS_PATH}}
        cmake -B ${{env.BUILD_PATH}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        cmake --build ${{env.BUILD_PATH}}

    - name: Commit Executable
      if: ${{needs.Check-Trigger.outputs.is_tag != 'true' && needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
      uses: EndBug/add-and-commit@v9
      with:
          author_name: Internal Workflow Action
          message: ${{env.COMMIT_MSG}}
          add: ${{env.CRONO_BIN_PATH}}${{env.CRONO_EXE_NAME}} --force
        
  # ___________________________________________________________________________
  # 
  UG_EX-Win-Build:
    runs-on:  windows-latest

    needs: 
    - Check-Build-UG_EX
    - UG_EX-Linux-Build # Guarnatee Sequential Build
    - Check-Trigger

    env: 
      TOOLS_PATH: ug_example/tools
      CRONO_EXE_NAME: xhptdc8_ugex.exe

    steps:
    - name: echo Suppress Status if Needed
      if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed == 'N' }}
      run: |
        echo "Job execution processing is suppressed for no cencerned files are changed."
        
    - name: Checkout Code
      if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
      uses: actions/checkout@v4

    - name: Pull latest changes
      if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
      run: |
        git pull --rebase

    - name: Configure CMake and Build
      if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
      run: |
        cd ${{env.TOOLS_PATH}}
        cmake -B ${{env.BUILD_PATH}}
        cmake --build ${{env.BUILD_PATH}} --config ${{env.BUILD_TYPE}}
        
    - name: Commit Executable
      if: ${{needs.Check-Trigger.outputs.is_tag != 'true' && needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
      uses: EndBug/add-and-commit@v9
      with:
          author_name: Internal Workflow Action
          message: ${{env.COMMIT_MSG}}
          add: ${{env.CRONO_BIN_PATH}}${{env.CRONO_EXE_NAME}} --force

  # ===========================================================================
  #
  Check-Readout-Tool-Build:
    runs-on: ubuntu-latest

    # Map a step output to a job output
    outputs:
      ok_to_proceed: ${{ steps.check.outputs.ok_to_proceed_val }}
      
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Get changed files in concerned folder(s)
      id: changed-files-specific
      uses: tj-actions/changed-files@v35
      with:
        files: |
          include/**
          lib/**
          rust/readout/**
          util/util/**
          .github/workflows/**
        
    # Check if any file(s) in the concerned folder changed
    - name: Check
      id: check
      if: steps.changed-files-specific.outputs.any_changed == 'false'
      run: |
        echo "No concerned files changed, suppressing processing."
        echo "ok_to_proceed_val=N" >> $GITHUB_OUTPUT
        
  # ___________________________________________________________________________
  #
  Readout-Tool-Build:
    runs-on: windows-latest

    needs: 
    - Check-Readout-Tool-Build    
    - Util-Library-Win # Dependency
    - UG_EX-Win-Build # Guarantee Sequential Build
    - Check-Trigger

    defaults:
      run:
        shell: cmd

    env: 
      CARGO_TERM_COLOR: always
      SOLUTION_FILE_PATH: .\rust\readout
      
      X64_OUTPUT_DIR_NAME: Build_x64
      X64_OUTPUT_DIR: .\Build_x64\release\
      X64_BINDINGS_REPO_DIR: .\rust\readout\src\bindings\
      X64_EXE_NAME: xhptdc8_readout.exe
      X64_BINDINGS_RS_NAME: bindings.rs
      X64_BINDINGS_RS_REPO_NAME: bindings_64.rs
        
    steps:
    - name: echo Suppress Status if Needed
      if: ${{needs.Check-Readout-Tool-Build.outputs.ok_to_proceed == 'N' }}
      run: |
        echo "Job execution processing is suppressed for no cencerned files are changed."
        
    - name: Checkout Code
      if: ${{needs.Check-Readout-Tool-Build.outputs.ok_to_proceed != 'N' }}
      uses: actions/checkout@v4
    
    - name: Pull Latest 
      if: ${{needs.Check-Readout-Tool-Build.outputs.ok_to_proceed != 'N' }}
      run: |
        git pull
        
    - name: Install LLVM and Clang
      if: ${{needs.Check-Readout-Tool-Build.outputs.ok_to_proceed != 'N' }}
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: "10.0"
        directory: ${{ runner.temp }}/llvm    
        
#    Uncomment the following item if you need to display more information
#    - name: Display Environment Settings
#      run: |
#        rustup show
         
    # Assuming that 'stable-x86_64-pc-windows-msvc' is default
    - name: Build Release
      if: ${{needs.Check-Readout-Tool-Build.outputs.ok_to_proceed != 'N' }}
      run: | 
        clang --version
        SET LIBCLANG_PATH=%LD_LIBRARY_PATH:~0,-1%
        cd ${{env.SOLUTION_FILE_PATH}}
        cargo build --target-dir=${{env.X64_OUTPUT_DIR_NAME}} --release --verbose
        
    # Copy EXE 
    - name: Copy Files to Repository
      if: ${{needs.Check-Trigger.outputs.is_tag != 'true' && needs.Check-Readout-Tool-Build.outputs.ok_to_proceed != 'N' }}
      run: |
        copy ${{env.SOLUTION_FILE_PATH}}\${{env.X64_OUTPUT_DIR}}${{env.X64_EXE_NAME}} ${{env.CRONO_BIN_PATH_WIN}}${{env.X64_EXE_NAME}}
        
    - name: Commit EXE
      if: ${{needs.Check-Trigger.outputs.is_tag != 'true' && needs.Check-Readout-Tool-Build.outputs.ok_to_proceed != 'N' }}
      uses: EndBug/add-and-commit@v9
      with:
          author_name: Internal Workflow Action
          message: ${{env.COMMIT_MSG}}
          add: ${{env.CRONO_BIN_PATH}}${{env.X64_EXE_NAME}} --force

    - name: Commit bindings
      if: ${{needs.Check-Trigger.outputs.is_tag != 'true' && needs.Check-Readout-Tool-Build.outputs.ok_to_proceed != 'N' }}
      uses: EndBug/add-and-commit@v9
      with:
          author_name: Internal Workflow Action
          message: ${{env.COMMIT_MSG}}
          add: ${{env.X64_BINDINGS_REPO_DIR}}${{env.X64_BINDINGS_RS_REPO_NAME}} --force
