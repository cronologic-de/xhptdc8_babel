name: Info Tool Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
      - 'info/go/info/src-cgo/**'
      - 'lib/include/**'
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env: 
  SOLUTION_FILE_PATH: .\go\info\src-cgo\
  COMMIT_MSG: 'Internal build due to Util code change' 

jobs:
  build:
    runs-on: windows-latest
    defaults:
       run:
         shell: cmd
         
    env: 
          X64_EXE_NAME: xhptdc8_info_64.exe
          X64_EXE_REPO_PATH: .\go\bin\x64\
          X86_EXE_NAME: xhptdc8_info.exe
          X86_EXE_REPO_PATH: .\go\bin\x86\
          
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.16.x' # The Go version to download (if necessary) and use.

    - name: Display Versions 
      run: |
        go env GOOS GOARCH CGO_ENABLED CC
        gcc --version

    - name: Checkout Code
      uses: actions/checkout@v2
              
    # In the build, cd into the folder to avoid 'Not in GOROOT' error, then cd back again
    - name: Build 64 EXE
      run: |
        cd go\info\src-cgo 
        go build -o ${{env.X64_EXE_NAME}} .\xhptdc8_info.go .\info_aux.go
        cd ..\..\..\       
    
    - name: Copy x64 EXE to Repository
      run: |
        mkdir ${{env.X64_EXE_REPO_PATH}} 
        dir ${{env.X64_EXE_REPO_PATH}}
        copy ${{env.SOLUTION_FILE_PATH}}${{env.X64_EXE_NAME}} ${{env.X64_EXE_REPO_PATH}}${{env.X64_EXE_NAME}}
        
    - name: Commit x64 EXE
      uses: EndBug/add-and-commit@v7.0.0
      with:
          author_name: Internal Workflow Action
          message: ${{env.COMMIT_MSG}}
          add: ${{env.X64_EXE_REPO_PATH}}${{env.X64_EXE_NAME}} --force

    # Build x86 Version 
    # Install gcc 686
    - name: Install MinGW x86 (gcc i686)
      uses: egor-tensin/setup-mingw@v2
      with:
        platform: x86

    - name: List GOOS GOARCH
      run: go tool dist list
      
    # In the build, cd into the folder to avoid 'Not in GOROOT' error, then cd back again
    - name: Build 86 EXE
      run: |
        set GOARCH=386
        set CGO_ENABLED=1
        set GOGCCFLAGS=-m32 -mthreads -fmessage-length=0 -fdebug-prefix-map=C:\Users\RUNNER~1\AppData\Local\Temp\go-build3768696574=/tmp/go-build -gno-record-gcc-switches
        go env GOOS GOARCH CGO_ENABLED CC GOGCCFLAGS
        gcc --version
        cd go\info\src-cgo 
        go build -o ${{env.X86_EXE_NAME}} .\xhptdc8_info.go .\info_aux.go
        cd ..\..\..\       
        Copy ${{env.SOLUTION_FILE_PATH}}${{env.X86_EXE_NAME}} ${{env.X86_EXE_REPO_PATH}}${{env.X86_EXE_NAME}}
        
    - name: Commit x86 EXE
      uses: EndBug/add-and-commit@v7.0.0
      with:
          author_name: Internal Workflow Action
          message: ${{env.COMMIT_MSG}}
          add: ${{env.X86_EXE_REPO_PATH}}${{env.X86_EXE_NAME}} --force
