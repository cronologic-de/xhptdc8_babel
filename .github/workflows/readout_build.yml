name: Readout Tool Build
on: 
  push:
    paths:
    - 'rust/readaout/**'
    - 'lib/include/**'
  workflow_dispatch:  

env:
  CARGO_TERM_COLOR: always
  SOLUTION_FILE_PATH: .\rust\readout

jobs:
  build:
    runs-on: windows-latest
    defaults:
       run:
         shell: powershell
    env: 
          X86_OUTPUT: Build_x86
          X64_OUTPUT: Build_x64
          X86_REPO_LIB_PTH_COMMIT: ./lib/x86dummy/
          X64_REPO_LIB_PTH_COMMIT: ./lib/x64dummy/
          COMMIT_MSG: 'Internal build due to Dummy-Library code change' 
        
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      # Inprovement: Uncomment & adjust if we can check out only: ./lib & ./dummy instead of the whole repository
      # with:
      #  path: ./dummy ./lib
    
 #   - name: Install LLVM and Clang
 #     uses: KyleMayes/install-llvm-action@v1
 #     with:
 #       version: "10.0"
 #       directory: ${{ runner.temp }}/llvm    
        
 #   - name: Show rustup Settings
 #     run: |
 #       rustup show
         
    # Assuming that 'stable-x86_64-pc-windows-msvc' is default
 #   - name: Build x64 Release
 #     run: | 
 #       clang --version
 #       ($env:LIBCLANG_PATH)="${{env.LD_LIBRARY_PATH}}".substring(0, "${{env.LD_LIBRARY_PATH}}".length - 1)
 #       echo LIBCLANG_PATH: ($env:LIBCLANG_PATH)
 #       cd ${{env.SOLUTION_FILE_PATH}}
 #       cargo build --target-dir='${{env.X64_OUTPUT}}' --release --verbose
 #       ls ./${{env.X64_OUTPUT}}/release

    - name: Install Target i686 and Set As Default for rustup
      run: |
        rustup show
        rustup install stable-i686-pc-windows-msvc
        rustup target add stable-i686-pc-windows-msvc
        rustup default stable-i686-pc-windows-msvc
        rustup show

    - name: Build x86 Release
      run: | 
        rustup show
        C:\msys64\mingw32\bin\clang --version
        ($env:LIBCLANG_PATH)='C:\msys64\mingw32\bin'
        echo LIBCLANG_PATH: ($env:LIBCLANG_PATH)
        cd ${{env.SOLUTION_FILE_PATH}}
        rustup run stable-i686-pc-windows-msvc cargo build --target-dir='${{env.X86_OUTPUT}}' --release --verbose
        ls ./${{env.X86_OUTPUT}}/release
